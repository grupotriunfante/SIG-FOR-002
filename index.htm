<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tratamento de Anomalia</title>
  <style>
  
  
body {
  font-family: 'Segoe UI', sans-serif;
  margin: 1;
  padding: 0;
  background-color: #f4f6f9;
  color: #333;
}

header {
  background-color: #ffffff;
  padding: 1px 10px;
  display: flex;
  align-items: center;
  justify-content: lesft;
  color: #333;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  position: relative;
}

header img {
  height: 50px;
  margin: 0 10px;
}

header h1 {
  font-size: 33px;
  margin: 0;
  text-align: center;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.subtitulo {
  margin-left: auto;
  margin-right: 1px;
  font-weight: normal
  justify-content: lesft;
  color: #332;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
  position: relativ;
}





    .container {
      max-width: 1000px;
      margin: 40px auto;
      background: white;
      padding: 40px;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.08);
    }

    h2 {
      margin-top: 30px;
      color: #1c2b3a;
      font-size: 20px;
    }

    label {
      font-weight: bold;
      margin-top: 15px;
      display: block;
      font-size: 14px;
    }

    .editable-box {
      border: 1px solid #ccc;
      min-height: 150px;
      padding: 10px;
      margin-top: 5px;
      background: #fff;
      border-radius: 8px;
    }

    input, select, textarea {
      width: 100%;
      padding: 10px;
      border-radius: 8px;
      border: 1px solid #ccc;
      margin-top: 5px;
      font-size: 14px;
      box-sizing: border-box;
    }

    textarea {
      height: 150px;
    }

    .uploaded-img {
      max-width: 100%;
      height: auto;
      margin-top: 10px;
      display: block;
      border-radius: 8px;
    }

    .btn {
      background-color: #1c2b3a;
      color: white;
      padding: 12px 20px;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      font-size: 16px;
      transition: 0.3s;
      margin-top: 20px;
    }

    .btn:hover {
      background-color: #324c63;
    }

    .footer {
      text-align: center;
      font-size: 13px;
      color: #777;
      margin-top: 60px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    table th, table td {
      padding: 12px;
      border: 1px solid #ddd;
      text-align: left;
    }

    table th {
      background-color: #f4f6f9;
      font-weight: normal;
    }

    .flex-row {
      display: flex;
      gap: 20px;
      margin-top: 20px;
    }

    .flex-row > div {
      flex: 1;
    }

    #statusMensagem {
      text-align: center;
      margin-top: 20px;
      font-weight: bold;
      color: #1c2b3a;
    }
  </style>
</head>

<body>

<header>
  <img src="http://i.imgur.com/Fln53Oi.png" alt="Logo do SIG">
  <img src="https://i.imgur.com/g0XvPeH.png" alt="Logo do SOL">
  <h1>Relat√≥rio de Ronda 5S</h1>
  <h5 class="subtitulo">SIG-FOR-002</h5>
</header>

  <div class="container">
    <div class="flex-row">
      <div>
        <label for="unidade">Unidade</label>
        <select id="unidade">
          <option value="">Selecione</option>
          <option>TCA</option>
          <option>TCV</option>
          <option>ABC</option>
          <option>MCD</option>
          <option>TBL</option>
          <option>TPA</option>
          <option>TBA</option>
          <option>TSJ</option>
          <option>API</option>
          <option>TPH</option>
          <option>TCG</option>
        </select>
      </div>

      <div>
        <label for="departamento">Departamento</label>
        <select id="departamento" onchange="atualizarArea()">
          <option value="">Selecione</option>
          <option value="logistica">Log√≠stica</option>
          <option value="administrativo">Administrativo</option>
        </select>
      </div>

      <div>
        <label for="area">√Årea</label>
        <select id="area">
          <option value="">Selecione</option>
        </select>
      </div>
    </div>

    <label for="responsavel">Respons√°vel da Ronda</label>
    <input type="text" id="responsavel" placeholder="Digite o nome do respons√°vel">

    <h2>Anomalia Encontrada</h2>
    <input type="file" id="imagemDescricaoInput" accept="image/*" onchange="inserirImagem('imagemDescricao', this)">
    <div id="imagemDescricao" class="editable-box"></div>

    <h2>Descri√ß√£o da Anomalia</h2>
    <textarea id="detalhe" placeholder="Descreva o detalhe da anomalia"></textarea>

    <h2>Plano de A√ß√£o</h2>
    <p>Liste as a√ß√µes necess√°rias para resolver o problema:</p>
    <table>
      <thead>
        <tr>
          <th>N¬∫</th>
          <th>A√ß√£o</th>
          <th>Respons√°vel</th>
          <th>Prazo</th>
        </tr>
      </thead>
      <tbody id="action-table-body">
        <tr>
          <td>1</td>
          <td><input type="text" placeholder="Descreva a a√ß√£o"></td>
          <td><input type="text" placeholder="Respons√°vel"></td>
          <td><input type="date"></td>
        </tr>
      </tbody>
    </table>
    <button class="btn" onclick="addRow()">‚ûï Adicionar A√ß√£o</button>

    <div class="buttons">
      <button class="btn" onclick="enviarFormulario()">üì§ Enviar</button>

    </div>

    <div id="statusMensagem"></div>

    <div class="footer">
      SIG - Sistema Integrado de Gest√£o ‚Ä¢ Relat√≥rio de Ronda 5S

    </div>
  </div>

<script>
  let contadorAcoes = 1;

  function addRow() {
    contadorAcoes++;
    const table = document.getElementById('action-table-body');
    const row = document.createElement('tr');
    row.innerHTML = `
      <td>${contadorAcoes}</td>
      <td><input type="text" placeholder="Descreva a a√ß√£o"></td>
      <td><input type="text" placeholder="Respons√°vel"></td>
      <td><input type="date"></td>
    `;
    table.appendChild(row);
  }

  function inserirImagem(divId, input) {
    const imagemContainer = document.getElementById(divId);
    const file = input.files[0];
    if (file && file.type.startsWith("image/")) {
      const reader = new FileReader();
      reader.onload = function (e) {
        const img = document.createElement("img");
        img.src = e.target.result;
        img.className = "uploaded-img";
        imagemContainer.innerHTML = '';
        imagemContainer.appendChild(img);
        console.log("Imagem carregada como Base64:", img.src);
      };
      reader.readAsDataURL(file);
    }
    input.value = "";
  }

  async function enviarFormulario() {
    const statusMensagem = document.getElementById('statusMensagem');
    statusMensagem.textContent = "Enviando formul√°rio... aguarde.";

    const responsavelRonda = document.getElementById("responsavel").value.trim();
    const unidade = document.getElementById("unidade").value;
    const departamento = document.getElementById("departamento").value;
    const area = document.getElementById("area").value;
    const detalhe = document.getElementById("detalhe").value.trim();

    const imagemElement = document.querySelector("#imagemDescricao img");
    let imagemBase64 = null;
    if (imagemElement) {
      imagemBase64 = imagemElement.src.split(',')[1];
    }

    // Coleta as a√ß√µes da tabela
    const tabela = document.querySelectorAll("#action-table-body tr");
    const acoes = [];

    tabela.forEach((linha, index) => {
      const acao = linha.cells[1].querySelector('input').value.trim();
      const responsavel = linha.cells[2].querySelector('input').value.trim();
      const prazo = linha.cells[3].querySelector('input').value;

      if (acao && responsavel && prazo) {
        acoes.push({
          Numero: index + 1,
          Acao: acao,
          Responsavel: responsavel,
          Prazo: prazo
        });
      }
    });
    
    const formularioId = "SOL-" + Date.now();  // Ex: FORM-1714401234567

    const dadosFormulario = {
      FormularioID: formularioId,  // üëà Aqui
      Unidade: unidade,
      Departamento: departamento,
      Area: area,
      ResponsavelRonda: responsavelRonda,
      DetalheAnomalia: detalhe,
      Evidencia: imagemBase64,
      Acoes: acoes
    };

    try {
      const response = await fetch('https://prod-15.brazilsouth.logic.azure.com:443/workflows/a62a81e1190d45aea44993e5863ae9e1/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=yu5ubkDAP-zY9ncoi3jNMbR5nJRSpuF_9AV4PoAAMg4', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(dadosFormulario)
      });

      if (response.ok) {
        statusMensagem.textContent = "Formul√°rio enviado com sucesso! ‚úÖ";
      } else {
        statusMensagem.textContent = "Erro ao enviar o formul√°rio. ‚ùå";
      }
    } catch (error) {
      console.error('Erro ao enviar formul√°rio:', error);
      statusMensagem.textContent = "Erro de conex√£o ao enviar. ‚ùå";
    }
  }

  function atualizarArea() {
    const departamento = document.getElementById("departamento").value;
    const areaSelect = document.getElementById("area");

    areaSelect.innerHTML = '<option value="">Selecione</option>';

    if (departamento === "logistica") {
      const areasLogistica = ["CPD", "Recebimento", "Packing", "Corredores", "Expedi√ß√£o", "Vesti√°rio", "C√¢mera Fria"];
      areasLogistica.forEach(area => {
        const option = document.createElement("option");
        option.value = area;
        option.textContent = area;
        areaSelect.appendChild(option);
      });
    } else if (departamento === "administrativo") {
      const areasAdministrativo = ["RH", "Comercial", "Banheiros", "Financeiro", "√Årea Comum"];
      areasAdministrativo.forEach(area => {
        const option = document.createElement("option");
        option.value = area;
        option.textContent = area;
        areaSelect.appendChild(option);
      });
    }
  }
</script>


</body>
</html>
